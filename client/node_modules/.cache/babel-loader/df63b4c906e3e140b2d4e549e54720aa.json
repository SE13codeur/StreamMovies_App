{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sss/Documents/DEV/Projets/Web/StreamMovies_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sss/Documents/DEV/Projets/Web/StreamMovies_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/sss/Documents/DEV/Projets/Web/StreamMovies_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import'../styles/Row.scss';import{Link}from'react-router-dom';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Row=function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isPoster=_ref.isPoster;var baseURL='https://image.tmdb.org/t/p/original';var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"row__title\",children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__images\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Link,{to:\"/movie/\".concat(movie===null||movie===void 0?void 0:movie.id),children:isPoster?/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(baseURL,\"/\").concat(movie.poster_path),className:\"row__image\",alt:(movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_title)}):/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(baseURL,\"/\").concat(movie.backdrop_path),className:\"row__image\",alt:(movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.original_title)})})},movie.id);})})]});};export default Row;","map":{"version":3,"sources":["/Users/sss/Documents/DEV/Projets/Web/StreamMovies_App/src/components/Row.js"],"names":["useState","useEffect","Link","axios","Row","title","fetchUrl","isPoster","baseURL","movies","setMovies","fetchData","get","request","data","results","map","movie","id","poster_path","name","original_title","backdrop_path"],"mappings":"igBAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,MAAO,oBAAP,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAmC,IAAhCC,CAAAA,KAAgC,MAAhCA,KAAgC,CAAzBC,QAAyB,MAAzBA,QAAyB,CAAfC,QAAe,MAAfA,QAAe,CAC3C,GAAMC,CAAAA,OAAO,CAAG,qCAAhB,CACA,cAA4BR,QAAQ,CAAC,EAAD,CAApC,wCAAOS,MAAP,eAAeC,SAAf,eAECT,SAAS,CAAC,UAAM,SACEU,CAAAA,SADF,qIACb,qKAC0BR,CAAAA,KAAK,CAACS,GAAN,CAAUN,QAAV,CAD1B,QACUO,OADV,eAEIH,SAAS,CAACG,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFJ,sDADa,4CAKbJ,SAAS,GACZ,CANS,CAMP,CAACL,QAAD,CANO,CAAT,CAQD,mBACI,aAAK,SAAS,CAAC,KAAf,wBAEI,WAAI,SAAS,CAAC,YAAd,UAA4BD,KAA5B,EAFJ,cAII,YAAK,SAAS,CAAC,aAAf,UACKI,MAAM,CAACO,GAAP,CAAW,SAAAC,KAAK,qBACb,kCACI,KAAC,IAAD,EAAM,EAAE,kBAAYA,KAAZ,SAAYA,KAAZ,iBAAYA,KAAK,CAAEC,EAAnB,CAAR,UACKX,QAAQ,cACL,YACI,GAAG,WAAKC,OAAL,aAAgBS,KAAK,CAACE,WAAtB,CADP,CAEI,SAAS,CAAC,YAFd,CAGI,GAAG,CAAE,CAAAF,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEZ,KAAP,IAAgBY,KAAhB,SAAgBA,KAAhB,iBAAgBA,KAAK,CAAEG,IAAvB,IAA+BH,KAA/B,SAA+BA,KAA/B,iBAA+BA,KAAK,CAAEI,cAAtC,CAHT,EADK,cAOL,YACA,GAAG,WAAKb,OAAL,aAAgBS,KAAK,CAACK,aAAtB,CADH,CAEA,SAAS,CAAC,YAFV,CAGA,GAAG,CAAE,CAAAL,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEZ,KAAP,IAAgBY,KAAhB,SAAgBA,KAAhB,iBAAgBA,KAAK,CAAEG,IAAvB,IAA+BH,KAA/B,SAA+BA,KAA/B,iBAA+BA,KAAK,CAAEI,cAAtC,CAHL,EARR,EADJ,EAAUJ,KAAK,CAACC,EAAhB,CADa,EAAhB,CADL,EAJJ,GADJ,CA6BH,CAzCD,CA2CA,cAAed,CAAAA,GAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport '../styles/Row.scss'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\n\nconst Row = ({ title, fetchUrl, isPoster }) => {\n    const baseURL = 'https://image.tmdb.org/t/p/original'\n    const [movies, setMovies] = useState([])\n\n     useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl)\n            setMovies(request.data.results)\n        }\n        fetchData()\n    }, [fetchUrl])\n\n    return (\n        <div className='row'>\n            \n            <h2 className='row__title'>{title}</h2>    \n            \n            <div className='row__images'>\n                {movies.map(movie => \n                    <div key={movie.id}>\n                        <Link to={`/movie/${movie?.id}`}>\n                            {isPoster ? (\n                                <img\n                                    src={`${baseURL}/${movie.poster_path}`}\n                                    className='row__image'\n                                    alt={movie?.title || movie?.name || movie?.original_title}\n                                />\n                            ) : (\n                                <img\n                                src={`${baseURL}/${movie.backdrop_path}`}\n                                className='row__image'\n                                alt={movie?.title || movie?.name || movie?.original_title}\n                                />\n                            )}\n                        </Link>\n                    </div>\n                )}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}